<div class="container-fluid wrapper">
  <div class="row">
    <div class="col-xs-12 col-sm-12 col-md-12" id="search-box-index">
      <div id="search-bar-index">
        <%= form_tag(spots_path, :method => "get", class: "form-inline", id: "search-form") do %>
          <input type="text" name="address" id="search_address" class="form-control border-radius" placeholder="Where ?" value="<%= params[:address] %>">
          <input type="hidden" name="selected-wing-sizes" value='<%= params["selected-wing-sizes"] %>'>
          <button type="submit" class="kite-index-btn flex-center" id="search-index-btn">Search</button>
        <% end %>
        <p class="unmargined wing-size-message">Ailes selectionnées <%= @wing_sizes.size %> aile<%= @wing_sizes.count > 1 ? "s" : "" %> :
          <%= @wing_sizes.map { |x| x.to_s }.reduce("") { |acc, x| acc += x + " m2, " }.chomp(", ") %>
        <div class="wing-box-index">
          <button class="kite-index-btn" id="wing-index-btn"  type="button" data-toggle="modal" data-target="#wing-sizes-modal">
            Choix des ailes
          </button>
        </div>
        <!-- Wing sizes Modal -->
          <div class="modal fade" id="wing-sizes-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
              <div class="modal-content" id="modal-content-wing-sizes">
                <div class="modal-header">
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                  <h6 class="modal-title" id="myModalLabel">Choix des ailes</h6>
                </div>
                <div class="modal-body text-center" id="wing-sizes-container">
                  <h3>Choisis les ailes que tu as</h3>
                  <div class="wing_size_index text-center">
                    <%= render 'pages/wing_size_selector_index' %>
                    <%= form_tag(spots_path, :method => "get", class: "form-inline") do %>
                      <%= hidden_field_tag 'selected-wing-sizes-index' %>
                      <%= hidden_field_tag 'selected-wing-sizes' %>
                      <%= hidden_field_tag 'address', params[:address] %>
                      <%= submit_tag "Update", class: "kite-index-btn" %>
                    <% end %>

                  </div>
                </div>
              </div>
            </div>
          </div>
          <!-- End of Wing sizes Modal -->
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-xs-12 col-sm-12 col-md-6" id="all-spot-cards-boundaries">
      <div class="results">
        <h5><%= @spots.size %> results</h5>
      </div>
      <% @spots.each do |spot| %>
        <div class="col-xs-12 col-sm-12 " id="spot-card-boundaries-<%= spot.id %>">
          <% if spot.photo %>
            <% img_url = cl_image_path spot.photo.path, height: 200, width: 658, crop: :fill %>
          <% else %>
            <% img_url = "http://res.cloudinary.com/dmx5zou5e/image/upload/c_crop,g_custom,h_200,w_658,x_922,y_559/v1480531988/image1_henvzi.jpg"%>
          <% end %>
          <div class="spot-card" data-name="<%= spot.name %>" style="background-image: linear-gradient(rgba(201, 255, 191, 0.2), rgba(255, 175, 189, 0.2)), url('<%=  img_url %>')">
            <%= link_to "", spot_path(spot), class: "spot-card-link" %>
            <div class="spot-infos small">
              <h7><%= spot.name %></h7>
              <div class="spot-full-infos">
                <div class="header-info-spot">
                  <div class="info-spot-items" id="temperature">
                    <h7><%= spot.fresh_forecasts.first.temperature.round %> °C</h7>
                    <p id="hour"><%= (Time.now + 60*60).strftime("%H:%M") %></p>
                  </div>
                  <div class="info-spot-items">
                    <% condition = spot.fresh_forecasts.first.icon %>
                    <%= image_tag @condition_icons[condition] %>
                    <%= @condition_string[condition] %>
                  </div>
                  <div class="info-spot-items">
                    <% @humidity = spot.fresh_forecasts.first.cloud_cover*100 %>
                    <%= @humidity.round %>%
                    <p>Humidity</p>
                  </div>
                  <div class="info-spot-items text-center">
                    <%= image_tag "wind.svg", id: "strength" %> <br>
                    <%= spot.fresh_forecasts.first.wind_strength.round %> kt
                  </div>
                  <div class="info-spot-items">
                    <% w = spot.fresh_forecasts.first.wind_direction%>
                    <div style="transform: rotate(<%= w + 180 %>deg)"> <%= image_tag "wind_direction.svg" %></div>
                    <%= spot.find_string_direction(w) %>
                  </div>
                    <!-- ATTENTION à modifier selon le spot.fresh_forecasts.first.icon -->
                </div>
              </div>
            </div>
          </div>
        </div>
      <% end %>
    </div>

    <div class="col-xs-12 col-sm-12 col-md-6 block_maps">
      <div class="width_box">
        <div id="map" style="height: calc(100vh - 115px);"></div>

          <% content_for(:after_js) do %>
            <script>
              $(document).ready(function() {
                var handler = Gmaps.build('Google');
                handler.buildMap({
                  provider: {
                    styles: [{"featureType":"road","elementType":"geometry","stylers":[{"visibility":"off"}]},{"featureType":"poi","elementType":"geometry","stylers":[{"visibility":"off"}]},{"featureType":"landscape","elementType":"geometry","stylers":[{"color":"#fffffa"}]},{"featureType":"water","stylers":[{"lightness":50}]},{"featureType":"road","elementType":"labels","stylers":[{"visibility":"off"}]},{"featureType":"transit","stylers":[{"visibility":"off"}]},{"featureType":"administrative","elementType":"geometry","stylers":[{"lightness":40}]}]
                  },
                  internal: { id: 'map' } }, function() {
                  markers = handler.addMarkers(<%= raw @hash.to_json %>);

                  handler.bounds.extendWith(markers);
                  handler.fitMapToBounds();
                  if (markers.length == 0) {
                    handler.getMap().setZoom(0);
                  } else if (markers.length == 1) {
                    handler.getMap().setZoom(12);
                  } else {
                    handler.getMap().setZoom(8);
                  }

                  // Loads all infowindow in markers
                  _.each(markers, function(marker){
                    google.maps.event.trigger(marker.getServiceObject(), 'click');
                  });
                  //setTimeout(function() { $("#map .gm-style-iw + div").click() }, 50);
                  $(".spot-card").on("mouseenter", function() {
                    var name = $(this).data("name");
                    marker = _.filter(markers, function(marker) {
                      return marker.infowindow.content.match(new RegExp(name));
                    })[0];
                    google.maps.event.trigger(marker.getServiceObject(), 'click');

                  });

                });

              });
          </script>
        <% end %>
      </div>
    </div>
  </div>
</div>
